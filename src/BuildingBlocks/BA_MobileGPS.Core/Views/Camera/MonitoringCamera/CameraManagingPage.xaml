<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="BA_MobileGPS.Core.Views.CameraManagingPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:converter="clr-namespace:BA_MobileGPS.Core"
    xmlns:effects="clr-namespace:BA_MobileGPS.Core.Effects"
    xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:ffsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
    xmlns:icons="clr-namespace:BA_MobileGPS.Core.Controls"
    xmlns:indicator="clr-namespace:Syncfusion.SfBusyIndicator.XForms;assembly=Syncfusion.SfBusyIndicator.XForms"
    xmlns:pancake="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:prism="http://prismlibrary.com"
    xmlns:vlc="clr-namespace:LibVLCSharp.Forms.Shared;assembly=LibVLCSharp.Forms"
    x:Name="root"
    prism:ViewModelLocator.AutowireViewModel="True"
    NavigationPage.HasBackButton="False"
    NavigationPage.HasNavigationBar="{Binding IsFullScreenOff}">
    <ContentPage.Resources>
        <converter:HasDataBackgroundColorConverter x:Key="HasDataBackgroundColorConverter" />
        <converter:HasDataIconColorConverter x:Key="HasDataIconColorConverter" />
        <converter:CameraChanelNameConverter x:Key="CameraChanelNameConverter" />
        <converter:ShowHideColumnConverter x:Key="ShowHideColumnConverter" />
        <converter:NumberToTimeConverter x:Key="NumberToTimeConverter" />
        <converter:BackgroundColorChannelCameraConverter x:Key="BackgroundColorChannelCameraConverter" />

        <Style x:Key="cameraTextFrame" TargetType="Frame">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="Start" />
            <Setter Property="Padding" Value="6,2" />
            <Setter Property="Margin" Value="5,5,0,0" />
        </Style>
        <Style TargetType="indicator:SfBusyIndicator">
            <Setter Property="AnimationType" Value="Cupertino" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="EnableAnimation" Value="True" />
            <Setter Property="TextColor" Value="White" />
            <Setter Property="ViewBoxHeight" Value="35" />
            <Setter Property="ViewBoxWidth" Value="35" />
            <Setter Property="Duration" Value="0.8" />
        </Style>
    </ContentPage.Resources>
    <NavigationPage.TitleView>
        <Grid VerticalOptions="Center">
            <icons:IconView
                Foreground="{DynamicResource WhiteColor}"
                HeightRequest="25"
                HorizontalOptions="Start"
                Source="ic_close.png"
                VerticalOptions="Center">
                <icons:IconView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ClosePageCommand}" />
                </icons:IconView.GestureRecognizers>
            </icons:IconView>
            <Label
                x:Name="title"
                HorizontalOptions="Center"
                StyleClass="GroupTitleLabel,BoldText"
                TextColor="{DynamicResource WhiteColor}"
                VerticalOptions="Center" />

            <icons:IconView
                Margin="0,0,5,0"
                Foreground="{DynamicResource WhiteColor}"
                HeightRequest="25"
                HorizontalOptions="End"
                Source="ic_help.png"
                VerticalOptions="Center">
                <icons:IconView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding HelpVideoCommand}" />
                </icons:IconView.GestureRecognizers>
            </icons:IconView>
        </Grid>
    </NavigationPage.TitleView>
    <Grid RowDefinitions="Auto,Auto,*,Auto" RowSpacing="0">
        <!--  Search area  -->
        <Grid
            Padding="10,0"
            ColumnDefinitions=".4*,Auto"
            ColumnSpacing="10"
            HeightRequest="60"
            IsVisible="{Binding IsFullScreenOff}">
            <pancake:PancakeView
                Grid.Column="0"
                Padding="0"
                BackgroundColor="{DynamicResource WhiteColor}"
                CornerRadius="22"
                HeightRequest="45"
                VerticalOptions="Center">
                <pancake:PancakeView.Shadow>
                    <pancake:DropShadow
                        BlurRadius="3"
                        Offset="0,0"
                        Color="Black" />
                </pancake:PancakeView.Shadow>
                <pancake:PancakeView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding SelectVehicleCameraCommand}" />
                </pancake:PancakeView.GestureRecognizers>
                <StackLayout
                    Padding="0"
                    HorizontalOptions="FillAndExpand"
                    Orientation="Horizontal">
                    <pancake:PancakeView
                        BackgroundColor="{DynamicResource PrimaryColor}"
                        CornerRadius="22"
                        WidthRequest="45">
                        <icons:IconView
                            Margin="13"
                            Foreground="{DynamicResource WhiteColor}"
                            Source="ic_search.png" />
                    </pancake:PancakeView>
                    <Entry
                        x:Name="entrySearch"
                        FontSize="14"
                        HorizontalOptions="FillAndExpand"
                        InputTransparent="True"
                        PlaceholderColor="{DynamicResource TextPlaceHolderColor}"
                        Text="{Binding Vehicle.PrivateCode}"
                        TextColor="{DynamicResource TextPrimaryColor}"
                        VerticalOptions="Center">
                        <Entry.Effects>
                            <effects:BorderlessEffect />
                        </Entry.Effects>
                    </Entry>
                </StackLayout>
            </pancake:PancakeView>
            <StackLayout
                Grid.Column="1"
                BindableLayout.ItemsSource="{Binding ChannelCamera}"
                Orientation="Horizontal">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <pancake:PancakeView
                            Padding="0"
                            BackgroundColor="{Binding Status, Converter={StaticResource BackgroundColorChannelCameraConverter}}"
                            CornerRadius="20"
                            HeightRequest="40"
                            VerticalOptions="Center"
                            WidthRequest="40">
                            <pancake:PancakeView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={x:Reference root}, Path=BindingContext.SelectedChannelCommand}" CommandParameter="{Binding .}" />
                            </pancake:PancakeView.GestureRecognizers>
                            <Label
                                HorizontalOptions="Center"
                                Text="{Binding Name}"
                                TextColor="{StaticResource WhiteColor}"
                                VerticalOptions="Center" />
                        </pancake:PancakeView>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>
        </Grid>
        <!--  Vehicle Plate  -->
        <Grid
            Grid.Row="1"
            Padding="10,0"
            BackgroundColor="{DynamicResource PrimaryColor}"
            HeightRequest="40"
            IsVisible="{Binding IsFullScreenOff}">
            <Label
                HorizontalOptions="Start"
                StyleClass="GroupTitleLabel,BoldText"
                Text="{Binding Vehicle.PrivateCode}"
                TextColor="{DynamicResource WhiteColor}"
                VerticalOptions="Center" />
        </Grid>
        <!--  Camera  -->
        <Grid x:Name="cameraPanel" Grid.Row="2">
            <StackLayout
                x:Name="parent"
                BindableLayout.ItemsSource="{Binding ItemsSource}"
                PropertyChanged="parent_PropertyChanged"
                Spacing="1"
                VerticalOptions="FillAndExpand">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout
                            BindableLayout.ItemsSource="{Binding ChildSource}"
                            HeightRequest="{Binding Height}"
                            Orientation="Horizontal"
                            Spacing="1">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Grid
                                        BackgroundColor="Black"
                                        HeightRequest="{Binding Height}"
                                        WidthRequest="{Binding Width}">
                                        <Grid.GestureRecognizers>
                                            <TapGestureRecognizer CommandParameter="{Binding .}" Tapped="TapGestureRecognizer_Tapped" />
                                        </Grid.GestureRecognizers>

                                        <vlc:VideoView
                                            x:Name="cam"
                                            InputTransparent="True"
                                            MediaPlayer="{Binding MediaPlayer}" />

                                        <indicator:SfBusyIndicator IsBusy="{Binding IsLoaded, Converter={StaticResource ShowHideColumnConverter}}" />

                                        <Grid
                                            x:Name="errGrid"
                                            BackgroundColor="Transparent"
                                            InputTransparent="True">
                                            <Grid.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsSelected}"
                                                    TargetType="Grid"
                                                    Value="true">
                                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IsError}"
                                                    TargetType="Grid"
                                                    Value="True">
                                                    <Setter Property="BackgroundColor" Value="Black" />
                                                    <Setter Property="InputTransparent" Value="False" />
                                                </DataTrigger>
                                            </Grid.Triggers>
                                            <StackLayout
                                                HorizontalOptions="Center"
                                                IsVisible="False"
                                                VerticalOptions="Center">
                                                <icons:IconView
                                                    Foreground="{DynamicResource WhiteColor}"
                                                    HeightRequest="25"
                                                    Source="ic_reload"
                                                    WidthRequest="25" />
                                                <Label
                                                    x:Name="lblErr"
                                                    FontSize="13"
                                                    HorizontalOptions="Center"
                                                    HorizontalTextAlignment="Center"
                                                    LineBreakMode="TailTruncation"
                                                    LineHeight="1.1"
                                                    MaxLines="2"
                                                    Text="{Binding ErrorMessenger}"
                                                    TextColor="{DynamicResource WhiteColor}"
                                                    TextType="Text" />
                                                <StackLayout.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Source={x:Reference errGrid}, Path=BackgroundColor}"
                                                        TargetType="StackLayout"
                                                        Value="Black">
                                                        <Setter Property="IsVisible" Value="True" />
                                                    </DataTrigger>
                                                </StackLayout.Triggers>
                                                <StackLayout.GestureRecognizers>
                                                    <TapGestureRecognizer Command="{Binding Source={x:Reference root}, Path=BindingContext.ReLoadCommand}" CommandParameter="{Binding .}" />
                                                </StackLayout.GestureRecognizers>
                                            </StackLayout>
                                        </Grid>

                                        <Frame
                                            x:Name="frCam"
                                            Margin="0,15,0,0"
                                            BackgroundColor="Transparent"
                                            BorderColor="{DynamicResource WhiteColor}"
                                            InputTransparent="True"
                                            Style="{StaticResource cameraTextFrame}">
                                            <Frame.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsSelected}"
                                                    TargetType="Frame"
                                                    Value="true">
                                                    <Setter Property="BorderColor" Value="#0C852E" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IsError}"
                                                    TargetType="Frame"
                                                    Value="True">
                                                    <Setter Property="BorderColor" Value="Red" />
                                                </DataTrigger>
                                            </Frame.Triggers>
                                            <Label
                                                FontSize="11"
                                                Text="{Binding Channel, Converter={StaticResource CameraChanelNameConverter}, Mode=TwoWay}"
                                                TextColor="{Binding Source={x:Reference frCam}, Path=BorderColor, Mode=TwoWay}"
                                                VerticalOptions="Center">
                                                <Label.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding IsError}"
                                                        TargetType="Label"
                                                        Value="True">
                                                        <Setter Property="TextColor" Value="Red" />
                                                    </DataTrigger>
                                                </Label.Triggers>
                                            </Label>
                                        </Frame>
                                    </Grid>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>
        </Grid>
        <StackLayout
            x:Name="noDataImage"
            Grid.Row="2"
            BackgroundColor="Transparent"
            HorizontalOptions="Center"
            Spacing="10"
            VerticalOptions="Center">
            <!--  Image for display svg image  -->
            <ffsvg:SvgCachedImage
                BackgroundColor="Transparent"
                HeightRequest="200"
                Source="NoPhotos.svg"
                VerticalOptions="Center"
                WidthRequest="200" />
        </StackLayout>

        <Grid
            x:Name="playbackControl"
            Grid.Row="3"
            VerticalOptions="End">
            <!--  Information  -->
            <StackLayout Spacing="0">
                <StackLayout
                    x:Name="inforBoard"
                    Padding="10,3"
                    BackgroundColor="Black"
                    IsVisible="True"
                    Spacing="5">
                    <StackLayout Orientation="Horizontal">
                        <ff:CachedImage
                            Margin="3,0,0,0"
                            HeightRequest="20"
                            Source="ic_greencamera" />
                        <Label
                            x:Name="lblCamName"
                            StyleClass="BoldText"
                            Text="{Binding SelectedItem.Channel, Converter={StaticResource CameraChanelNameConverter}}"
                            TextColor="{DynamicResource WhiteColor}" />
                        <ff:CachedImage
                            Margin="20,0,0,0"
                            HeightRequest="20"
                            Source="ic_blueclock" />
                        <Label
                            LineBreakMode="TailTruncation"
                            MaxLines="1"
                            Text="{Binding CurrentTime}"
                            TextColor="{DynamicResource WhiteColor}" />
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <ff:CachedImage HeightRequest="20" Source="ic_redlocation" />
                        <Label
                            x:Name="lblAdress"
                            LineBreakMode="TailTruncation"
                            MaxLines="2"
                            Text="{Binding CurrentAddress}"
                            TextColor="{DynamicResource WhiteColor}" />
                    </StackLayout>
                    <StackLayout.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference lblCamName}, Path=Text.Length}"
                            TargetType="StackLayout"
                            Value="0">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsFullScreenOff}"
                            TargetType="StackLayout"
                            Value="false">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </StackLayout.Triggers>
                </StackLayout>
                <BoxView
                    HeightRequest="0.5"
                    IsVisible="False"
                    Color="White">
                    <BoxView.Triggers>
                        <DataTrigger
                            Binding="{Binding IsFullScreenOff}"
                            TargetType="BoxView"
                            Value="true">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </BoxView.Triggers>
                </BoxView>
                <!--  Main PlayBack Control  -->
                <Grid
                    Padding="5,7"
                    BackgroundColor="#4D000000"
                    ColumnDefinitions="Auto,*,Auto">
                    <Grid.Triggers>
                        <DataTrigger
                            Binding="{Binding IsFullScreenOff}"
                            TargetType="Grid"
                            Value="true">
                            <Setter Property="BackgroundColor" Value="Black" />
                        </DataTrigger>
                    </Grid.Triggers>
                    <StackLayout
                        Margin="45,0,0,0"
                        HorizontalOptions="Start"
                        Orientation="Horizontal"
                        Spacing="10">
                        <StackLayout.Triggers>
                            <DataTrigger
                                Binding="{Binding IsFullScreenOff}"
                                TargetType="StackLayout"
                                Value="true">
                                <Setter Property="Margin" Value="15,0,0,0" />
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <icons:IconView
                            Foreground="Red"
                            HeightRequest="25"
                            IsVisible="True"
                            Source="ic_livestream"
                            WidthRequest="25">
                            <icons:IconView.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsFullScreenOff}"
                                    TargetType="icons:IconView"
                                    Value="true">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </icons:IconView.Triggers>
                        </icons:IconView>
                        <icons:IconView
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            Source="{Binding PlayButtonIconSource}"
                            WidthRequest="25">
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding PlayTappedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                        <icons:IconView
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            Source="{Binding VolumeButtonIconSource}"
                            WidthRequest="25">
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding VolumeChangedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                    </StackLayout>
                    <StackLayout
                        Grid.Column="1"
                        HorizontalOptions="Center"
                        IsVisible="True"
                        Orientation="Horizontal"
                        Spacing="10">
                        <StackLayout.Triggers>
                            <DataTrigger
                                Binding="{Binding IsFullScreenOff}"
                                TargetType="StackLayout"
                                Value="true">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <icons:IconView
                            Margin="10"
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            Source="ic_camera"
                            WidthRequest="25">
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ScreenShotTappedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                        <icons:IconView
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            Source="ic_share"
                            WidthRequest="25">
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ShareTappedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                    </StackLayout>

                    <StackLayout
                        Grid.Column="2"
                        Margin="0,0,45,0"
                        Orientation="Horizontal"
                        Spacing="10">
                        <StackLayout.Triggers>
                            <DataTrigger
                                Binding="{Binding IsFullScreenOff}"
                                TargetType="StackLayout"
                                Value="true">
                                <Setter Property="Margin" Value="0,0,15,0" />
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <!--  Gia han thoi gian  -->
                        <buttons:SfCheckBox
                            x:Name="autorenewal"
                            CornerRadius="0"
                            IsChecked="{Binding AutoAddTime}"
                            LineBreakMode="TailTruncation"
                            TextColor="White"
                            UncheckedColor="{DynamicResource GrayColor}" />
                        <Grid
                            HeightRequest="25"
                            IsVisible="{Binding AutoAddTime, Converter={StaticResource ShowHideColumnConverter}}"
                            WidthRequest="45">
                            <Label
                                IsVisible="True"
                                StyleClass="BoldText"
                                Text="{Binding TotalTime, Converter={StaticResource NumberToTimeConverter}, Mode=TwoWay}"
                                TextColor="White"
                                VerticalOptions="Center" />
                        </Grid>
                        <icons:IconView
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            IsVisible="{Binding AutoAddTime, Converter={StaticResource ShowHideColumnConverter}}"
                            Source="ic_addtime.png"
                            WidthRequest="25">
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding RequestTimeTappedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                        <icons:IconView
                            Foreground="{DynamicResource WhiteColor}"
                            HeightRequest="25"
                            Source="ic_fullscreen.png"
                            WidthRequest="25">
                            <icons:IconView.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsFullScreenOff}"
                                    TargetType="icons:IconView"
                                    Value="false">
                                    <Setter Property="Source" Value="ic_normalscreen" />
                                </DataTrigger>
                            </icons:IconView.Triggers>
                            <icons:IconView.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding FullScreenTappedCommand}" />
                            </icons:IconView.GestureRecognizers>
                        </icons:IconView>
                    </StackLayout>
                </Grid>
            </StackLayout>
        </Grid>
    </Grid>
</ContentPage>