<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="BA_MobileGPS.Core.Views.Camera.MonitoringCamera.Template1Camera"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converter="clr-namespace:BA_MobileGPS.Core"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:icons="clr-namespace:BA_MobileGPS.Core.Controls"
    xmlns:indicator="clr-namespace:Syncfusion.SfBusyIndicator.XForms;assembly=Syncfusion.SfBusyIndicator.XForms"
    xmlns:local="clr-namespace:BA_MobileGPS.Core.Views.Camera.MonitoringCamera"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vlc="clr-namespace:LibVLCSharp.Forms.Shared;assembly=LibVLCSharp.Forms"
    mc:Ignorable="d">
    <ContentView.Resources>
        <converter:CameraTextBorderConverter x:Key="CameraTextBorderConverter" />
        <converter:ShowHideColumnConverter x:Key="ShowHideColumnConverter" />
        <Style x:Key="cameraTextFrame" TargetType="Frame">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="Start" />
            <Setter Property="Padding" Value="6,2" />
            <Setter Property="Margin" Value="10,10,0,0" />
        </Style>
        <Style TargetType="indicator:SfBusyIndicator">
            <Setter Property="AnimationType" Value="Cupertino" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="EnableAnimation" Value="True" />
            <Setter Property="TextColor" Value="White" />
            <Setter Property="ViewBoxHeight" Value="35" />
            <Setter Property="ViewBoxWidth" Value="35" />
            <Setter Property="Duration" Value="0.8" />
        </Style>
    </ContentView.Resources>
    <Grid BackgroundColor="Black">
        <Grid.GestureRecognizers>
            <TapGestureRecognizer Command="{Binding CameraFrameTappedCommand}" CommandParameter="{x:Static local:CameraEnum.CAM1}" />
        </Grid.GestureRecognizers>
        <vlc:VideoView
            x:Name="cam1"
            InputTransparent="True"
            MediaPlayer="{Binding Cam1.MediaPlayer}" />
        <Label
            x:Name="lblErrCam1"
            Margin="0,10,5,0"
            HorizontalOptions="End"
            IsVisible="{Binding Cam1.IsError}"
            StyleClass="BoldText"
            Text="LỖI KẾT NỐI"
            TextColor="Red"
            VerticalOptions="Start" />
        <Frame
            x:Name="frCam1"
            BackgroundColor="Transparent"
            BorderColor="{DynamicResource WhiteColor}"
            InputTransparent="True"
            Style="{StaticResource cameraTextFrame}">
            <Frame.Triggers>
                <DataTrigger
                    Binding="{Binding Cam1.IsError}"
                    TargetType="Frame"
                    Value="True">
                    <Setter Property="BorderColor" Value="Red" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding SelectedCamera}"
                    TargetType="Frame"
                    Value="{x:Static local:CameraEnum.CAM1}">
                    <Setter Property="BorderColor" Value="#0C852E" />
                </DataTrigger>
            </Frame.Triggers>
            <Label
                StyleClass="BoldText"
                Text="{Binding Cam1.Data.Channel, Converter={StaticResource CameraChanelNameConverter}}"
                TextColor="{Binding Source={x:Reference frCam1}, Path=BorderColor, Mode=OneWay}"
                VerticalOptions="Center" />
        </Frame>
        <indicator:SfBusyIndicator IsBusy="{Binding Cam1.IsLoaded, Converter={StaticResource ShowHideColumnConverter}}" />
        <Grid
            x:Name="gridCloseCam1"
            BackgroundColor="#33FFFFFF"
            InputTransparent="True">
            <icons:IconView
                Foreground="{DynamicResource WhiteColor}"
                HeightRequest="30"
                HorizontalOptions="Center"
                IsVisible="False"
                Source="ic_reload"
                VerticalOptions="Center"
                WidthRequest="30">
                <icons:IconView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ReloadCommand}" CommandParameter="{x:Static local:CameraEnum.CAM1}" />
                </icons:IconView.GestureRecognizers>
                <icons:IconView.Triggers>
                    <DataTrigger
                        Binding="{Binding Cam1.IsError}"
                        TargetType="icons:IconView"
                        Value="True">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </icons:IconView.Triggers>
            </icons:IconView>
            <Grid.Triggers>
                <DataTrigger
                    Binding="{Binding Source={x:Reference frCam1}, Path=BorderColor}"
                    TargetType="Grid"
                    Value="#0C852E">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding Cam1.IsError}"
                    TargetType="Grid"
                    Value="True">
                    <Setter Property="InputTransparent" Value="False" />
                </DataTrigger>
            </Grid.Triggers>
        </Grid>
    </Grid>
</ContentView>